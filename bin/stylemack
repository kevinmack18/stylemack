#!/usr/bin/env node

'use strict';


var args = require('yargs').argv;
var chokidar = require('chokidar');
var bs = require('browser-sync').create();
var _ = require('lodash');
var path = require('path');
var stylemack = require('./stylemack');

var input = args.i;
var output = args.o;
var configPath = args.c;
var watch = args.w;
var delay = (watch === true) ? 2000 : watch;
var browser = args.b;
var port = _.isNumber(browser) ? browser : null;

var generate = _.throttle(
	function() {
		console.log('Generating style guide...');
		stylemack({
			input: input,
			output: output,
			configPath: configPath,
		});
	},
	delay
);

generate();

if (watch) {
	console.log('Watching for changes...');

	var watcher = chokidar.watch(input, {
		ignoreInitial: true,
		persistent: true,
	});

	watcher.on('all', function(event, path) {
		console.log(event, path);
		generate();
	});
}

if (browser) {
	console.log('Launching browser...');
	var options = {
		ui: false,
		files: path.join(output, '**', '*.*'),
		watchEvents: ['add', 'change'],
		server: output,
		reloadDelay: 500,
		notify: false,
		ghostMode: false,  // ghost mode causes cross-iframe weirdness
	};
	if (port) {
		options.port = port;
	}
	bs.init(options);
}
